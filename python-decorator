//python装饰器是针对函数
def decorator1(func):
     def func_wrapper(num1):
          return (func(num1))*100
     return func_wrapper

@decorator1
def get_num2(num):
         return num*3
         
         
//带参数的装饰器
   def  tags(tag_name):
        def tags_decorator(func):
            def  func_wrapper(text):
                return "{0}{1}{0}".format(tag_name,func(text))
             return func_wrapper
         return tags_decorator
    @tags("\"")
    def get_text(name):
                return "hello" + name
                
  print(get_text("john"))
  
         
//装饰器可以用于写一些你不想修改的函数，然后可以反复循环使用。
